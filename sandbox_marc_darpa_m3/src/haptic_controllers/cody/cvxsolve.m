% Produced by CVXGEN, 2012-03-08 11:13:00 -0800.
% CVXGEN is Copyright (C) 2006-2011 Jacob Mattingley, jem@cvxgen.com.
% The code in this file is Copyright (C) 2006-2011 Jacob Mattingley.
% CVXGEN, or solvers produced by CVXGEN, cannot be used for commercial
% applications without prior written permission from Jacob Mattingley.

% Filename: cvxsolve.m.
% Description: Solution file, via cvx, for use with sample.m.

function [vars, status] = cvxsolve(params, settings)

B = params.B;
I = params.I;
J = params.J;
KP_t_KP = params.KP_t_KP;
delta_x_d = params.delta_x_d;
f_max = params.f_max;
f_min = params.f_min;
n_K_ci_J_ci = params.n_K_ci_J_ci;
q_max = params.q_max;
q_min = params.q_min;
u_max = params.u_max;
u_min = params.u_min;
x_0 = params.x_0;

cvx_begin
  % Caution: automatically generated by cvxgen. May be incorrect.
  variable x_1(7, 1);
  variable u_0(7, 1);

  minimize(quad_form(delta_x_d - J*(x_1 - x_0), I) + quad_form(x_1 - x_0, KP_t_KP));
  subject to
    x_1 == x_0 + B*u_0;
    q_min <= x_1;
    x_1 <= q_max;
    f_min <= n_K_ci_J_ci*(x_1 - x_0);
    n_K_ci_J_ci*(x_1 - x_0) <= f_max;
    u_min <= u_0;
    u_0 <= u_max;
cvx_end

vars.u_0 = u_0;
vars.x_1 = x_1;
vars.x{1} = x_1;

status.cvx_status = cvx_status;

% Provide a drop-in replacement for csolve.
status.optval = cvx_optval;
status.converged = strcmp(cvx_status, 'Solved');
